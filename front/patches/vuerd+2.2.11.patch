diff --git a/node_modules/vuerd/dist/vuerd.esm.js b/node_modules/vuerd/dist/vuerd.esm.js
index 56c8801..3e9d3bf 100644
--- a/node_modules/vuerd/dist/vuerd.esm.js
+++ b/node_modules/vuerd/dist/vuerd.esm.js
@@ -20123,12 +20123,7 @@ const addPanel = (...newPanels) => contextPanelConfig.panels.push(...newPanels);
 const setExcludePanel = (exclude) => (contextPanelConfig.exclude = exclude);
 
 const databaseList = [
-    'MariaDB',
-    'MSSQL',
     'MySQL',
-    'Oracle',
-    'PostgreSQL',
-    'SQLite',
 ];
 const languageList = [
     'GraphQL',
@@ -20176,9 +20171,9 @@ const createCanvasState = () => ({
         columnComment: true,
         columnDataType: true,
         columnDefault: true,
-        columnAutoIncrement: false,
+        columnAutoIncrement: true,
         columnPrimaryKey: true,
-        columnUnique: false,
+        columnUnique: true,
         columnNotNull: true,
         relationship: true,
     },
@@ -21737,195 +21732,162 @@ var MariaDBTypes$1 = [
 /**
  * https://docs.microsoft.com/ko-kr/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
  */
-var MSSQLTypes$1 = [
-    'BIGINT',
-    'BINARY',
-    'BIT',
-    'CHAR',
-    'DATE',
-    'DATETIME',
-    'DATETIME2',
-    'DATETIMEOFFSET',
-    'DECIMAL',
-    'FLOAT',
-    'GEOGRAPHY',
-    'GEOMETRY',
-    'IMAGE',
-    'INT',
-    'MONEY',
-    'NCHAR',
-    'NTEXT',
-    'NUMERIC',
-    'NVARCHAR',
-    'REAL',
-    'SMALLDATETIME',
-    'SMALLINT',
-    'SMALLMONEY',
-    'SQL_VARIANT',
-    'TEXT',
-    'TIME',
-    'TINYINT',
-    'UNIQUEIDENTIFIER',
-    'VARBINARY',
-    'VARCHAR',
-    'XML',
-];
+// var MSSQLTypes$1 = [
+//     'BIGINT',
+//     'BINARY',
+//     'BIT',
+//     'CHAR',
+//     'DATE',
+//     'DATETIME',
+//     'DATETIME2',
+//     'DATETIMEOFFSET',
+//     'DECIMAL',
+//     'FLOAT',
+//     'GEOGRAPHY',
+//     'GEOMETRY',
+//     'IMAGE',
+//     'INT',
+//     'MONEY',
+//     'NCHAR',
+//     'NTEXT',
+//     'NUMERIC',
+//     'NVARCHAR',
+//     'REAL',
+//     'SMALLDATETIME',
+//     'SMALLINT',
+//     'SMALLMONEY',
+//     'SQL_VARIANT',
+//     'TEXT',
+//     'TIME',
+//     'TINYINT',
+//     'UNIQUEIDENTIFIER',
+//     'VARBINARY',
+//     'VARCHAR',
+//     'XML',
+// ];
 
 /**
  * https://dev.mysql.com/doc/refman/8.0/en/data-types.html
  */
 var MySQLTypes$1 = [
-    'BIGINT',
-    'BINARY',
-    'BIT',
-    'BLOB',
-    'BOOL',
-    'BOOLEAN',
-    'CHAR',
-    'DATE',
-    'DATETIME',
-    'DEC',
-    'DECIMAL',
-    'DOUBLE PRECISION',
-    'DOUBLE',
-    'ENUM',
-    'FLOAT',
-    'GEOMETRY',
-    'GEOMETRYCOLLECTION',
-    'INT',
-    'INTEGER',
-    'JSON',
-    'LINESTRING',
-    'LONGBLOB',
-    'LONGTEXT',
-    'MEDIUMBLOB',
-    'MEDIUMINT',
-    'MEDIUMTEXT',
-    'MULTILINESTRING',
-    'MULTIPOINT',
-    'MULTIPOLYGON',
-    'NUMERIC',
-    'POINT',
-    'POLYGON',
-    'SET',
-    'SMALLINT',
-    'TEXT',
-    'TIME',
-    'TIMESTAMP',
-    'TINYBLOB',
-    'TINYINT',
-    'TINYTEXT',
-    'VARBINARY',
-    'VARCHAR',
-    'YEAR',
+    'BIGINT(Long)',
+    'INT(Integer)',
+    'CHAR(Character)',
+    'DOUBLE(Double)',
+    'FLOAT(Float)',
+    'SMALLINT(Short)',
+    'TINYINT(Byte)',
+    'BOOLEAN(Boolean)',
+    'VARCHAR(String)',
+    'DATETIME(LocalDateTime)',
 ];
 
 /**
  * https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT012
  */
-var OracleTypes$1 = [
-    'BFILE',
-    'BINARY_DOUBLE',
-    'BINARY_FLOAT',
-    'BLOB',
-    'CHAR',
-    'CLOB',
-    'DATE',
-    'DATETIME',
-    'LONG RAW',
-    'LONG',
-    'NCHAR',
-    'NCLOB',
-    'NUMBER',
-    'NVARCHAR2',
-    'RAW',
-    'TIMESTAMP WITH LOCAL TIME ZONE',
-    'TIMESTAMP WITH TIME ZONE',
-    'TIMESTAMP',
-    'UriType',
-    'VARCHAR',
-    'VARCHAR2',
-    'XMLType',
-];
+// var OracleTypes$1 = [
+//     'BFILE',
+//     'BINARY_DOUBLE',
+//     'BINARY_FLOAT',
+//     'BLOB',
+//     'CHAR',
+//     'CLOB',
+//     'DATE',
+//     'DATETIME',
+//     'LONG RAW',
+//     'LONG',
+//     'NCHAR',
+//     'NCLOB',
+//     'NUMBER',
+//     'NVARCHAR2',
+//     'RAW',
+//     'TIMESTAMP WITH LOCAL TIME ZONE',
+//     'TIMESTAMP WITH TIME ZONE',
+//     'TIMESTAMP',
+//     'UriType',
+//     'VARCHAR',
+//     'VARCHAR2',
+//     'XMLType',
+// ];
 
 /**
  * https://www.postgresql.org/docs/current/datatype.html
  */
-var PostgreSQLTypes$1 = [
-    'BIGINT',
-    'BIGSERIAL',
-    'BIT VARYING',
-    'BIT',
-    'BOOL',
-    'BOOLEAN',
-    'BOX',
-    'BYTEA',
-    'CHAR',
-    'CHARACTER VARYING',
-    'CHARACTER',
-    'CIDR',
-    'CIRCLE',
-    'DATE',
-    'DECIMAL',
-    'DOUBLE PRECISION',
-    'FLOAT4',
-    'FLOAT8',
-    'INET',
-    'INT',
-    'INT2',
-    'INT4',
-    'INT8',
-    'INTEGER',
-    'INTERVAL',
-    'JSON',
-    'JSONB',
-    'LINE',
-    'LSEG',
-    'MACADDR',
-    'MACADDR8',
-    'MONEY',
-    'NUMERIC',
-    'PATH',
-    'PG_LSN',
-    'POINT',
-    'POLYGON',
-    'REAL',
-    'SERIAL',
-    'SERIAL2',
-    'SERIAL4',
-    'SERIAL8',
-    'SMALLINT',
-    'SMALLSERIAL',
-    'TEXT',
-    'TIME WITH',
-    'TIME',
-    'TIMESTAMP WITH',
-    'TIMESTAMP',
-    'TIMESTAMPTZ',
-    'TIMETZ',
-    'TSQUERY',
-    'TSVECTOR',
-    'TXID_SNAPSHOT',
-    'UUID',
-    'VARBIT',
-    'VARCHAR',
-    'XML',
-];
+// var PostgreSQLTypes$1 = [
+//     'BIGINT',
+//     'BIGSERIAL',
+//     'BIT VARYING',
+//     'BIT',
+//     'BOOL',
+//     'BOOLEAN',
+//     'BOX',
+//     'BYTEA',
+//     'CHAR',
+//     'CHARACTER VARYING',
+//     'CHARACTER',
+//     'CIDR',
+//     'CIRCLE',
+//     'DATE',
+//     'DECIMAL',
+//     'DOUBLE PRECISION',
+//     'FLOAT4',
+//     'FLOAT8',
+//     'INET',
+//     'INT',
+//     'INT2',
+//     'INT4',
+//     'INT8',
+//     'INTEGER',
+//     'INTERVAL',
+//     'JSON',
+//     'JSONB',
+//     'LINE',
+//     'LSEG',
+//     'MACADDR',
+//     'MACADDR8',
+//     'MONEY',
+//     'NUMERIC',
+//     'PATH',
+//     'PG_LSN',
+//     'POINT',
+//     'POLYGON',
+//     'REAL',
+//     'SERIAL',
+//     'SERIAL2',
+//     'SERIAL4',
+//     'SERIAL8',
+//     'SMALLINT',
+//     'SMALLSERIAL',
+//     'TEXT',
+//     'TIME WITH',
+//     'TIME',
+//     'TIMESTAMP WITH',
+//     'TIMESTAMP',
+//     'TIMESTAMPTZ',
+//     'TIMETZ',
+//     'TSQUERY',
+//     'TSVECTOR',
+//     'TXID_SNAPSHOT',
+//     'UUID',
+//     'VARBIT',
+//     'VARCHAR',
+//     'XML',
+// ];
 
 /**
  * https://www.sqlite.org/datatype3.html
  */
-var SQLiteTypes$1 = [
-    'BLOB',
-    'INTEGER',
-    'NUMERIC',
-    'REAL',
-    'TEXT',
-];
+// var SQLiteTypes$1 = [
+//     'BLOB',
+//     'INTEGER',
+//     'NUMERIC',
+//     'REAL',
+//     'TEXT',
+// ];
 
-var MariaDBKeywords = [];
+// var MariaDBKeywords = [];
 
-var MSSQLKeywords = [];
+// var MSSQLKeywords = [];
 
 var MySQLKeywords = [
     'ADD',
@@ -21967,11 +21929,11 @@ var MySQLKeywords = [
     'USE',
 ];
 
-var OracleKeywords = [];
+// var OracleKeywords = [];
 
-var PostgreSQLKeywords = [];
+// var PostgreSQLKeywords = [];
 
-var SQLiteKeywords = ['AUTOINCREMENT'];
+// var SQLiteKeywords = ['AUTOINCREMENT'];
 
 var tokenMatch = {
     whiteSpace: /(?:\s+|#.*|-- +.*|\/\*(?:[\s\S])*?\*\/)+/,
@@ -25946,268 +25908,268 @@ const Bus = {
 /**
  * https://mariadb.com/kb/en/data-types/
  */
-const MariaDBTypes = [
-    { name: 'BIGINT', primitiveType: 'long' },
-    { name: 'BINARY', primitiveType: 'string' },
-    { name: 'BIT', primitiveType: 'int' },
-    { name: 'BLOB', primitiveType: 'lob' },
-    { name: 'BOOL', primitiveType: 'boolean' },
-    { name: 'BOOLEAN', primitiveType: 'boolean' },
-    { name: 'CHAR', primitiveType: 'string' },
-    { name: 'DATE', primitiveType: 'date' },
-    { name: 'DATETIME', primitiveType: 'dateTime' },
-    { name: 'DEC', primitiveType: 'decimal' },
-    { name: 'DECIMAL', primitiveType: 'decimal' },
-    { name: 'DOUBLE PRECISION', primitiveType: 'double' },
-    { name: 'DOUBLE', primitiveType: 'double' },
-    { name: 'ENUM', primitiveType: 'string' },
-    { name: 'FIXED', primitiveType: 'decimal' },
-    { name: 'FLOAT', primitiveType: 'float' },
-    { name: 'GEOMETRY', primitiveType: 'string' },
-    { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
-    { name: 'INT', primitiveType: 'int' },
-    { name: 'INTEGER', primitiveType: 'int' },
-    { name: 'JSON', primitiveType: 'lob' },
-    { name: 'LINESTRING', primitiveType: 'string' },
-    { name: 'LONGBLOB', primitiveType: 'lob' },
-    { name: 'LONGTEXT', primitiveType: 'lob' },
-    { name: 'MEDIUMBLOB', primitiveType: 'lob' },
-    { name: 'MEDIUMINT', primitiveType: 'int' },
-    { name: 'MEDIUMTEXT', primitiveType: 'lob' },
-    { name: 'MULTILINESTRING', primitiveType: 'string' },
-    { name: 'MULTIPOINT', primitiveType: 'string' },
-    { name: 'MULTIPOLYGON', primitiveType: 'string' },
-    { name: 'NUMERIC', primitiveType: 'decimal' },
-    { name: 'POINT', primitiveType: 'string' },
-    { name: 'POLYGON', primitiveType: 'string' },
-    { name: 'REAL', primitiveType: 'double' },
-    { name: 'SET', primitiveType: 'string' },
-    { name: 'SMALLINT', primitiveType: 'int' },
-    { name: 'TEXT', primitiveType: 'lob' },
-    { name: 'TIME', primitiveType: 'time' },
-    { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-    { name: 'TINYBLOB', primitiveType: 'lob' },
-    { name: 'TINYINT', primitiveType: 'int' },
-    { name: 'TINYTEXT', primitiveType: 'lob' },
-    { name: 'VARBINARY', primitiveType: 'string' },
-    { name: 'VARCHAR', primitiveType: 'string' },
-    { name: 'YEAR', primitiveType: 'int' },
-];
+// const MariaDBTypes = [
+//     { name: 'BIGINT', primitiveType: 'long' },
+//     { name: 'BINARY', primitiveType: 'string' },
+//     { name: 'BIT', primitiveType: 'int' },
+//     { name: 'BLOB', primitiveType: 'lob' },
+//     { name: 'BOOL', primitiveType: 'boolean' },
+//     { name: 'BOOLEAN', primitiveType: 'boolean' },
+//     { name: 'CHAR', primitiveType: 'string' },
+//     { name: 'DATE', primitiveType: 'date' },
+//     { name: 'DATETIME', primitiveType: 'dateTime' },
+//     { name: 'DEC', primitiveType: 'decimal' },
+//     { name: 'DECIMAL', primitiveType: 'decimal' },
+//     { name: 'DOUBLE PRECISION', primitiveType: 'double' },
+//     { name: 'DOUBLE', primitiveType: 'double' },
+//     { name: 'ENUM', primitiveType: 'string' },
+//     { name: 'FIXED', primitiveType: 'decimal' },
+//     { name: 'FLOAT', primitiveType: 'float' },
+//     { name: 'GEOMETRY', primitiveType: 'string' },
+//     { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
+//     { name: 'INT', primitiveType: 'int' },
+//     { name: 'INTEGER', primitiveType: 'int' },
+//     { name: 'JSON', primitiveType: 'lob' },
+//     { name: 'LINESTRING', primitiveType: 'string' },
+//     { name: 'LONGBLOB', primitiveType: 'lob' },
+//     { name: 'LONGTEXT', primitiveType: 'lob' },
+//     { name: 'MEDIUMBLOB', primitiveType: 'lob' },
+//     { name: 'MEDIUMINT', primitiveType: 'int' },
+//     { name: 'MEDIUMTEXT', primitiveType: 'lob' },
+//     { name: 'MULTILINESTRING', primitiveType: 'string' },
+//     { name: 'MULTIPOINT', primitiveType: 'string' },
+//     { name: 'MULTIPOLYGON', primitiveType: 'string' },
+//     { name: 'NUMERIC', primitiveType: 'decimal' },
+//     { name: 'POINT', primitiveType: 'string' },
+//     { name: 'POLYGON', primitiveType: 'string' },
+//     { name: 'REAL', primitiveType: 'double' },
+//     { name: 'SET', primitiveType: 'string' },
+//     { name: 'SMALLINT', primitiveType: 'int' },
+//     { name: 'TEXT', primitiveType: 'lob' },
+//     { name: 'TIME', primitiveType: 'time' },
+//     { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+//     { name: 'TINYBLOB', primitiveType: 'lob' },
+//     { name: 'TINYINT', primitiveType: 'int' },
+//     { name: 'TINYTEXT', primitiveType: 'lob' },
+//     { name: 'VARBINARY', primitiveType: 'string' },
+//     { name: 'VARCHAR', primitiveType: 'string' },
+//     { name: 'YEAR', primitiveType: 'int' },
+// ];
 
 /**
  * https://docs.microsoft.com/ko-kr/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
  */
-const MSSQLTypes = [
-    { name: 'bigint', primitiveType: 'long' },
-    { name: 'binary', primitiveType: 'lob' },
-    { name: 'bit', primitiveType: 'int' },
-    { name: 'char', primitiveType: 'string' },
-    { name: 'date', primitiveType: 'date' },
-    { name: 'datetime', primitiveType: 'dateTime' },
-    { name: 'datetime2', primitiveType: 'dateTime' },
-    { name: 'datetimeoffset', primitiveType: 'dateTime' },
-    { name: 'decimal', primitiveType: 'decimal' },
-    { name: 'float', primitiveType: 'double' },
-    { name: 'geography', primitiveType: 'string' },
-    { name: 'geometry', primitiveType: 'string' },
-    { name: 'image', primitiveType: 'lob' },
-    { name: 'int', primitiveType: 'int' },
-    { name: 'money', primitiveType: 'double' },
-    { name: 'nchar', primitiveType: 'string' },
-    { name: 'ntext', primitiveType: 'lob' },
-    { name: 'numeric', primitiveType: 'float' },
-    { name: 'nvarchar', primitiveType: 'string' },
-    { name: 'real', primitiveType: 'float' },
-    { name: 'smalldatetime', primitiveType: 'dateTime' },
-    { name: 'smallint', primitiveType: 'int' },
-    { name: 'smallmoney', primitiveType: 'float' },
-    { name: 'sql_variant', primitiveType: 'string' },
-    { name: 'text', primitiveType: 'lob' },
-    { name: 'time', primitiveType: 'time' },
-    { name: 'tinyint', primitiveType: 'int' },
-    { name: 'uniqueidentifier', primitiveType: 'string' },
-    { name: 'varbinary', primitiveType: 'string' },
-    { name: 'varchar', primitiveType: 'string' },
-    { name: 'xml', primitiveType: 'lob' },
-];
+// const MSSQLTypes = [
+//     { name: 'bigint', primitiveType: 'long' },
+//     { name: 'binary', primitiveType: 'lob' },
+//     { name: 'bit', primitiveType: 'int' },
+//     { name: 'char', primitiveType: 'string' },
+//     { name: 'date', primitiveType: 'date' },
+//     { name: 'datetime', primitiveType: 'dateTime' },
+//     { name: 'datetime2', primitiveType: 'dateTime' },
+//     { name: 'datetimeoffset', primitiveType: 'dateTime' },
+//     { name: 'decimal', primitiveType: 'decimal' },
+//     { name: 'float', primitiveType: 'double' },
+//     { name: 'geography', primitiveType: 'string' },
+//     { name: 'geometry', primitiveType: 'string' },
+//     { name: 'image', primitiveType: 'lob' },
+//     { name: 'int', primitiveType: 'int' },
+//     { name: 'money', primitiveType: 'double' },
+//     { name: 'nchar', primitiveType: 'string' },
+//     { name: 'ntext', primitiveType: 'lob' },
+//     { name: 'numeric', primitiveType: 'float' },
+//     { name: 'nvarchar', primitiveType: 'string' },
+//     { name: 'real', primitiveType: 'float' },
+//     { name: 'smalldatetime', primitiveType: 'dateTime' },
+//     { name: 'smallint', primitiveType: 'int' },
+//     { name: 'smallmoney', primitiveType: 'float' },
+//     { name: 'sql_variant', primitiveType: 'string' },
+//     { name: 'text', primitiveType: 'lob' },
+//     { name: 'time', primitiveType: 'time' },
+//     { name: 'tinyint', primitiveType: 'int' },
+//     { name: 'uniqueidentifier', primitiveType: 'string' },
+//     { name: 'varbinary', primitiveType: 'string' },
+//     { name: 'varchar', primitiveType: 'string' },
+//     { name: 'xml', primitiveType: 'lob' },
+// ];
 
 /**
  * https://dev.mysql.com/doc/refman/8.0/en/data-types.html
  */
 const MySQLTypes = [
-    { name: 'BIGINT', primitiveType: 'long' },
-    { name: 'BINARY', primitiveType: 'string' },
-    { name: 'BIT', primitiveType: 'int' },
-    { name: 'BLOB', primitiveType: 'lob' },
-    { name: 'BOOL', primitiveType: 'boolean' },
-    { name: 'BOOLEAN', primitiveType: 'boolean' },
-    { name: 'CHAR', primitiveType: 'string' },
-    { name: 'DATE', primitiveType: 'date' },
-    { name: 'DATETIME', primitiveType: 'dateTime' },
-    { name: 'DEC', primitiveType: 'decimal' },
-    { name: 'DECIMAL', primitiveType: 'decimal' },
-    { name: 'DOUBLE PRECISION', primitiveType: 'double' },
-    { name: 'DOUBLE', primitiveType: 'double' },
-    { name: 'ENUM', primitiveType: 'string' },
-    { name: 'FLOAT', primitiveType: 'float' },
-    { name: 'GEOMETRY', primitiveType: 'string' },
-    { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
-    { name: 'INT', primitiveType: 'int' },
-    { name: 'INTEGER', primitiveType: 'int' },
-    { name: 'JSON', primitiveType: 'lob' },
-    { name: 'LINESTRING', primitiveType: 'string' },
-    { name: 'LONGBLOB', primitiveType: 'lob' },
-    { name: 'LONGTEXT', primitiveType: 'lob' },
-    { name: 'MEDIUMBLOB', primitiveType: 'lob' },
-    { name: 'MEDIUMINT', primitiveType: 'int' },
-    { name: 'MEDIUMTEXT', primitiveType: 'lob' },
-    { name: 'MULTILINESTRING', primitiveType: 'string' },
-    { name: 'MULTIPOINT', primitiveType: 'string' },
-    { name: 'MULTIPOLYGON', primitiveType: 'string' },
-    { name: 'NUMERIC', primitiveType: 'decimal' },
-    { name: 'POINT', primitiveType: 'string' },
-    { name: 'POLYGON', primitiveType: 'string' },
-    { name: 'SET', primitiveType: 'string' },
-    { name: 'SMALLINT', primitiveType: 'int' },
-    { name: 'TEXT', primitiveType: 'lob' },
-    { name: 'TIME', primitiveType: 'time' },
-    { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-    { name: 'TINYBLOB', primitiveType: 'lob' },
-    { name: 'TINYINT', primitiveType: 'int' },
-    { name: 'TINYTEXT', primitiveType: 'lob' },
-    { name: 'VARBINARY', primitiveType: 'string' },
-    { name: 'VARCHAR', primitiveType: 'string' },
-    { name: 'YEAR', primitiveType: 'int' },
+    { name: 'BIGINT(Long)', primitiveType: 'long' },
+    // { name: 'BINARY', primitiveType: 'string' },
+    // { name: 'BIT', primitiveType: 'int' },
+    // { name: 'BLOB', primitiveType: 'lob' },
+    // { name: 'BOOL', primitiveType: 'boolean' },
+    { name: 'BOOLEAN(Boolean)', primitiveType: 'boolean' },
+    { name: 'CHAR(Character)', primitiveType: 'string' },
+    // { name: 'DATE', primitiveType: 'date' },
+    { name: 'DATETIME(LocalDateTime)', primitiveType: 'dateTime' },
+    // { name: 'DEC', primitiveType: 'decimal' },
+    // { name: 'DECIMAL', primitiveType: 'decimal' },
+    // { name: 'DOUBLE PRECISION', primitiveType: 'double' },
+    { name: 'DOUBLE(Double)', primitiveType: 'double' },
+    // { name: 'ENUM', primitiveType: 'string' },
+    { name: 'FLOAT(Float)', primitiveType: 'float' },
+    // { name: 'GEOMETRY', primitiveType: 'string' },
+    // { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
+    { name: 'INT(Integer)', primitiveType: 'int' },
+    // { name: 'INTEGER', primitiveType: 'int' },
+    // { name: 'JSON', primitiveType: 'lob' },
+    // { name: 'LINESTRING', primitiveType: 'string' },
+    // { name: 'LONGBLOB', primitiveType: 'lob' },
+    // { name: 'LONGTEXT', primitiveType: 'lob' },
+    // { name: 'MEDIUMBLOB', primitiveType: 'lob' },
+    // { name: 'MEDIUMINT', primitiveType: 'int' },
+    // { name: 'MEDIUMTEXT', primitiveType: 'lob' },
+    // { name: 'MULTILINESTRING', primitiveType: 'string' },
+    // { name: 'MULTIPOINT', primitiveType: 'string' },
+    // { name: 'MULTIPOLYGON', primitiveType: 'string' },
+    // { name: 'NUMERIC', primitiveType: 'decimal' },
+    // { name: 'POINT', primitiveType: 'string' },
+    // { name: 'POLYGON', primitiveType: 'string' },
+    // { name: 'SET', primitiveType: 'string' },
+    { name: 'SMALLINT(Short)', primitiveType: 'int' },
+    // { name: 'TEXT', primitiveType: 'lob' },
+    // { name: 'TIME', primitiveType: 'time' },
+    // { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+    // { name: 'TINYBLOB', primitiveType: 'lob' },
+    { name: 'TINYINT(Byte)', primitiveType: 'int' },
+    // { name: 'TINYTEXT', primitiveType: 'lob' },
+    // { name: 'VARBINARY', primitiveType: 'string' },
+    { name: 'VARCHAR(String)', primitiveType: 'string' },
+    // { name: 'YEAR', primitiveType: 'int' },
 ];
 
 /**
  * https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT012
  */
-const OracleTypes = [
-    { name: 'BFILE', primitiveType: 'lob' },
-    { name: 'BINARY_DOUBLE', primitiveType: 'double' },
-    { name: 'BINARY_FLOAT', primitiveType: 'float' },
-    { name: 'BLOB', primitiveType: 'lob' },
-    { name: 'CHAR', primitiveType: 'string' },
-    { name: 'CLOB', primitiveType: 'lob' },
-    { name: 'DATE', primitiveType: 'date' },
-    { name: 'DATETIME', primitiveType: 'dateTime' },
-    { name: 'LONG RAW', primitiveType: 'lob' },
-    { name: 'LONG', primitiveType: 'lob' },
-    { name: 'NCHAR', primitiveType: 'string' },
-    { name: 'NCLOB', primitiveType: 'lob' },
-    { name: 'NUMBER', primitiveType: 'long' },
-    { name: 'NVARCHAR2', primitiveType: 'string' },
-    { name: 'RAW', primitiveType: 'lob' },
-    { name: 'TIMESTAMP WITH LOCAL TIME ZONE', primitiveType: 'dateTime' },
-    { name: 'TIMESTAMP WITH TIME ZONE', primitiveType: 'dateTime' },
-    { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-    { name: 'UriType', primitiveType: 'string' },
-    { name: 'VARCHAR', primitiveType: 'string' },
-    { name: 'VARCHAR2', primitiveType: 'string' },
-    { name: 'XMLType', primitiveType: 'string' },
-];
+// const OracleTypes = [
+//     { name: 'BFILE', primitiveType: 'lob' },
+//     { name: 'BINARY_DOUBLE', primitiveType: 'double' },
+//     { name: 'BINARY_FLOAT', primitiveType: 'float' },
+//     { name: 'BLOB', primitiveType: 'lob' },
+//     { name: 'CHAR', primitiveType: 'string' },
+//     { name: 'CLOB', primitiveType: 'lob' },
+//     { name: 'DATE', primitiveType: 'date' },
+//     { name: 'DATETIME', primitiveType: 'dateTime' },
+//     { name: 'LONG RAW', primitiveType: 'lob' },
+//     { name: 'LONG', primitiveType: 'lob' },
+//     { name: 'NCHAR', primitiveType: 'string' },
+//     { name: 'NCLOB', primitiveType: 'lob' },
+//     { name: 'NUMBER', primitiveType: 'long' },
+//     { name: 'NVARCHAR2', primitiveType: 'string' },
+//     { name: 'RAW', primitiveType: 'lob' },
+//     { name: 'TIMESTAMP WITH LOCAL TIME ZONE', primitiveType: 'dateTime' },
+//     { name: 'TIMESTAMP WITH TIME ZONE', primitiveType: 'dateTime' },
+//     { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+//     { name: 'UriType', primitiveType: 'string' },
+//     { name: 'VARCHAR', primitiveType: 'string' },
+//     { name: 'VARCHAR2', primitiveType: 'string' },
+//     { name: 'XMLType', primitiveType: 'string' },
+// ];
 
 /**
  * https://www.postgresql.org/docs/current/datatype.html
  */
-const PostgreSQLTypes = [
-    { name: 'bigint', primitiveType: 'long' },
-    { name: 'bigserial', primitiveType: 'long' },
-    { name: 'bit varying', primitiveType: 'int' },
-    { name: 'bit', primitiveType: 'int' },
-    { name: 'bool', primitiveType: 'boolean' },
-    { name: 'boolean', primitiveType: 'boolean' },
-    { name: 'box', primitiveType: 'string' },
-    { name: 'bytea', primitiveType: 'string' },
-    { name: 'char', primitiveType: 'string' },
-    { name: 'character varying', primitiveType: 'string' },
-    { name: 'character', primitiveType: 'string' },
-    { name: 'cidr', primitiveType: 'string' },
-    { name: 'circle', primitiveType: 'string' },
-    { name: 'date', primitiveType: 'date' },
-    { name: 'decimal', primitiveType: 'decimal' },
-    { name: 'double precision', primitiveType: 'double' },
-    { name: 'float4', primitiveType: 'float' },
-    { name: 'float8', primitiveType: 'double' },
-    { name: 'inet', primitiveType: 'string' },
-    { name: 'int', primitiveType: 'int' },
-    { name: 'int2', primitiveType: 'int' },
-    { name: 'int4', primitiveType: 'int' },
-    { name: 'int8', primitiveType: 'long' },
-    { name: 'integer', primitiveType: 'int' },
-    { name: 'interval', primitiveType: 'time' },
-    { name: 'json', primitiveType: 'lob' },
-    { name: 'jsonb', primitiveType: 'lob' },
-    { name: 'line', primitiveType: 'string' },
-    { name: 'lseg', primitiveType: 'string' },
-    { name: 'macaddr', primitiveType: 'string' },
-    { name: 'macaddr8', primitiveType: 'string' },
-    { name: 'money', primitiveType: 'double' },
-    { name: 'numeric', primitiveType: 'decimal' },
-    { name: 'path', primitiveType: 'string' },
-    { name: 'pg_lsn', primitiveType: 'int' },
-    { name: 'point', primitiveType: 'string' },
-    { name: 'polygon', primitiveType: 'string' },
-    { name: 'real', primitiveType: 'float' },
-    { name: 'serial', primitiveType: 'int' },
-    { name: 'serial2', primitiveType: 'int' },
-    { name: 'serial4', primitiveType: 'int' },
-    { name: 'serial8', primitiveType: 'long' },
-    { name: 'smallint', primitiveType: 'int' },
-    { name: 'smallserial', primitiveType: 'int' },
-    { name: 'text', primitiveType: 'string' },
-    { name: 'time with time zone', primitiveType: 'time' },
-    { name: 'time', primitiveType: 'time' },
-    { name: 'timestamp with time zone', primitiveType: 'dateTime' },
-    { name: 'timestamp', primitiveType: 'dateTime' },
-    { name: 'timestamptz', primitiveType: 'dateTime' },
-    { name: 'timetz', primitiveType: 'time' },
-    { name: 'tsquery', primitiveType: 'string' },
-    { name: 'tsvector', primitiveType: 'string' },
-    { name: 'txid_snapshot', primitiveType: 'string' },
-    { name: 'uuid', primitiveType: 'string' },
-    { name: 'varbit', primitiveType: 'int' },
-    { name: 'varchar', primitiveType: 'string' },
-    { name: 'xml', primitiveType: 'lob' },
-];
+// const PostgreSQLTypes = [
+//     { name: 'bigint', primitiveType: 'long' },
+//     { name: 'bigserial', primitiveType: 'long' },
+//     { name: 'bit varying', primitiveType: 'int' },
+//     { name: 'bit', primitiveType: 'int' },
+//     { name: 'bool', primitiveType: 'boolean' },
+//     { name: 'boolean', primitiveType: 'boolean' },
+//     { name: 'box', primitiveType: 'string' },
+//     { name: 'bytea', primitiveType: 'string' },
+//     { name: 'char', primitiveType: 'string' },
+//     { name: 'character varying', primitiveType: 'string' },
+//     { name: 'character', primitiveType: 'string' },
+//     { name: 'cidr', primitiveType: 'string' },
+//     { name: 'circle', primitiveType: 'string' },
+//     { name: 'date', primitiveType: 'date' },
+//     { name: 'decimal', primitiveType: 'decimal' },
+//     { name: 'double precision', primitiveType: 'double' },
+//     { name: 'float4', primitiveType: 'float' },
+//     { name: 'float8', primitiveType: 'double' },
+//     { name: 'inet', primitiveType: 'string' },
+//     { name: 'int', primitiveType: 'int' },
+//     { name: 'int2', primitiveType: 'int' },
+//     { name: 'int4', primitiveType: 'int' },
+//     { name: 'int8', primitiveType: 'long' },
+//     { name: 'integer', primitiveType: 'int' },
+//     { name: 'interval', primitiveType: 'time' },
+//     { name: 'json', primitiveType: 'lob' },
+//     { name: 'jsonb', primitiveType: 'lob' },
+//     { name: 'line', primitiveType: 'string' },
+//     { name: 'lseg', primitiveType: 'string' },
+//     { name: 'macaddr', primitiveType: 'string' },
+//     { name: 'macaddr8', primitiveType: 'string' },
+//     { name: 'money', primitiveType: 'double' },
+//     { name: 'numeric', primitiveType: 'decimal' },
+//     { name: 'path', primitiveType: 'string' },
+//     { name: 'pg_lsn', primitiveType: 'int' },
+//     { name: 'point', primitiveType: 'string' },
+//     { name: 'polygon', primitiveType: 'string' },
+//     { name: 'real', primitiveType: 'float' },
+//     { name: 'serial', primitiveType: 'int' },
+//     { name: 'serial2', primitiveType: 'int' },
+//     { name: 'serial4', primitiveType: 'int' },
+//     { name: 'serial8', primitiveType: 'long' },
+//     { name: 'smallint', primitiveType: 'int' },
+//     { name: 'smallserial', primitiveType: 'int' },
+//     { name: 'text', primitiveType: 'string' },
+//     { name: 'time with time zone', primitiveType: 'time' },
+//     { name: 'time', primitiveType: 'time' },
+//     { name: 'timestamp with time zone', primitiveType: 'dateTime' },
+//     { name: 'timestamp', primitiveType: 'dateTime' },
+//     { name: 'timestamptz', primitiveType: 'dateTime' },
+//     { name: 'timetz', primitiveType: 'time' },
+//     { name: 'tsquery', primitiveType: 'string' },
+//     { name: 'tsvector', primitiveType: 'string' },
+//     { name: 'txid_snapshot', primitiveType: 'string' },
+//     { name: 'uuid', primitiveType: 'string' },
+//     { name: 'varbit', primitiveType: 'int' },
+//     { name: 'varchar', primitiveType: 'string' },
+//     { name: 'xml', primitiveType: 'lob' },
+// ];
 
 /**
  * https://www.sqlite.org/datatype3.html
  */
-const SQLiteTypes = [
-    { name: 'BLOB', primitiveType: 'lob' },
-    { name: 'INTEGER', primitiveType: 'int' },
-    { name: 'NUMERIC', primitiveType: 'decimal' },
-    { name: 'REAL', primitiveType: 'double' },
-    { name: 'TEXT', primitiveType: 'string' },
-];
+// const SQLiteTypes = [
+//     { name: 'BLOB', primitiveType: 'lob' },
+//     { name: 'INTEGER', primitiveType: 'int' },
+//     { name: 'NUMERIC', primitiveType: 'decimal' },
+//     { name: 'REAL', primitiveType: 'double' },
+//     { name: 'TEXT', primitiveType: 'string' },
+// ];
 
 const databaseHints = [
-    {
-        database: 'MariaDB',
-        dataTypeHints: MariaDBTypes,
-    },
-    {
-        database: 'MSSQL',
-        dataTypeHints: MSSQLTypes,
-    },
+    // {
+    //     database: 'MariaDB',
+    //     dataTypeHints: MariaDBTypes,
+    // },
+    // {
+    //     database: 'MSSQL',
+    //     dataTypeHints: MSSQLTypes,
+    // },
     {
         database: 'MySQL',
         dataTypeHints: MySQLTypes,
     },
-    {
-        database: 'Oracle',
-        dataTypeHints: OracleTypes,
-    },
-    {
-        database: 'PostgreSQL',
-        dataTypeHints: PostgreSQLTypes,
-    },
-    {
-        database: 'SQLite',
-        dataTypeHints: SQLiteTypes,
-    },
+    // {
+    //     database: 'Oracle',
+    //     dataTypeHints: OracleTypes,
+    // },
+    // {
+    //     database: 'PostgreSQL',
+    //     dataTypeHints: PostgreSQLTypes,
+    // },
+    // {
+    //     database: 'SQLite',
+    //     dataTypeHints: SQLiteTypes,
+    // },
 ];
 
 function getPrimitiveType(dataType, database) {
@@ -52852,15 +52814,6 @@ function createERDMenus(context, canvas) {
             name: 'Export',
             children: createExportMenus(context, canvas),
         },
-        {
-            icon: {
-                prefix: 'mdi',
-                name: 'atom',
-                size: 18,
-            },
-            name: 'Automatic Table Placement',
-            execute: () => runAutomaticTablePlacement(context),
-        },
     ].map(menu => (Object.assign(Object.assign({}, menu), { options: Object.assign({}, defaultOptions$a) })));
 }
 
diff --git a/node_modules/vuerd/dist/vuerd.js b/node_modules/vuerd/dist/vuerd.js
index 6c3ba78..83ce8cd 100644
--- a/node_modules/vuerd/dist/vuerd.js
+++ b/node_modules/vuerd/dist/vuerd.js
@@ -20129,12 +20129,7 @@
     const setExcludePanel = (exclude) => (contextPanelConfig.exclude = exclude);
 
     const databaseList = [
-        'MariaDB',
-        'MSSQL',
         'MySQL',
-        'Oracle',
-        'PostgreSQL',
-        'SQLite',
     ];
     const languageList = [
         'GraphQL',
@@ -20182,9 +20177,9 @@
             columnComment: true,
             columnDataType: true,
             columnDefault: true,
-            columnAutoIncrement: false,
+            columnAutoIncrement: true,
             columnPrimaryKey: true,
-            columnUnique: false,
+            columnUnique: true,
             columnNotNull: true,
             relationship: true,
         },
@@ -21692,246 +21687,213 @@
     /**
      * https://mariadb.com/kb/en/data-types/
      */
-    var MariaDBTypes$1 = [
-        'BIGINT',
-        'BINARY',
-        'BIT',
-        'BLOB',
-        'BOOL',
-        'BOOLEAN',
-        'CHAR',
-        'DATE',
-        'DATETIME',
-        'DEC',
-        'DECIMAL',
-        'DOUBLE PRECISION',
-        'DOUBLE',
-        'ENUM',
-        'FIXED',
-        'FLOAT',
-        'GEOMETRY',
-        'GEOMETRYCOLLECTION',
-        'INT',
-        'INTEGER',
-        'JSON',
-        'LINESTRING',
-        'LONGBLOB',
-        'LONGTEXT',
-        'MEDIUMBLOB',
-        'MEDIUMINT',
-        'MEDIUMTEXT',
-        'MULTILINESTRING',
-        'MULTIPOINT',
-        'MULTIPOLYGON',
-        'NUMERIC',
-        'POINT',
-        'POLYGON',
-        'REAL',
-        'SET',
-        'SMALLINT',
-        'TEXT',
-        'TIME',
-        'TIMESTAMP',
-        'TINYBLOB',
-        'TINYINT',
-        'TINYTEXT',
-        'VARBINARY',
-        'VARCHAR',
-        'YEAR',
-    ];
+    // var MariaDBTypes$1 = [
+    //     'BIGINT',
+    //     'BINARY',
+    //     'BIT',
+    //     'BLOB',
+    //     'BOOL',
+    //     'BOOLEAN',
+    //     'CHAR',
+    //     'DATE',
+    //     'DATETIME',
+    //     'DEC',
+    //     'DECIMAL',
+    //     'DOUBLE PRECISION',
+    //     'DOUBLE',
+    //     'ENUM',
+    //     'FIXED',
+    //     'FLOAT',
+    //     'GEOMETRY',
+    //     'GEOMETRYCOLLECTION',
+    //     'INT',
+    //     'INTEGER',
+    //     'JSON',
+    //     'LINESTRING',
+    //     'LONGBLOB',
+    //     'LONGTEXT',
+    //     'MEDIUMBLOB',
+    //     'MEDIUMINT',
+    //     'MEDIUMTEXT',
+    //     'MULTILINESTRING',
+    //     'MULTIPOINT',
+    //     'MULTIPOLYGON',
+    //     'NUMERIC',
+    //     'POINT',
+    //     'POLYGON',
+    //     'REAL',
+    //     'SET',
+    //     'SMALLINT',
+    //     'TEXT',
+    //     'TIME',
+    //     'TIMESTAMP',
+    //     'TINYBLOB',
+    //     'TINYINT',
+    //     'TINYTEXT',
+    //     'VARBINARY',
+    //     'VARCHAR',
+    //     'YEAR',
+    // ];
 
     /**
      * https://docs.microsoft.com/ko-kr/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
      */
-    var MSSQLTypes$1 = [
-        'BIGINT',
-        'BINARY',
-        'BIT',
-        'CHAR',
-        'DATE',
-        'DATETIME',
-        'DATETIME2',
-        'DATETIMEOFFSET',
-        'DECIMAL',
-        'FLOAT',
-        'GEOGRAPHY',
-        'GEOMETRY',
-        'IMAGE',
-        'INT',
-        'MONEY',
-        'NCHAR',
-        'NTEXT',
-        'NUMERIC',
-        'NVARCHAR',
-        'REAL',
-        'SMALLDATETIME',
-        'SMALLINT',
-        'SMALLMONEY',
-        'SQL_VARIANT',
-        'TEXT',
-        'TIME',
-        'TINYINT',
-        'UNIQUEIDENTIFIER',
-        'VARBINARY',
-        'VARCHAR',
-        'XML',
-    ];
+    // var MSSQLTypes$1 = [
+    //     'BIGINT',
+    //     'BINARY',
+    //     'BIT',
+    //     'CHAR',
+    //     'DATE',
+    //     'DATETIME',
+    //     'DATETIME2',
+    //     'DATETIMEOFFSET',
+    //     'DECIMAL',
+    //     'FLOAT',
+    //     'GEOGRAPHY',
+    //     'GEOMETRY',
+    //     'IMAGE',
+    //     'INT',
+    //     'MONEY',
+    //     'NCHAR',
+    //     'NTEXT',
+    //     'NUMERIC',
+    //     'NVARCHAR',
+    //     'REAL',
+    //     'SMALLDATETIME',
+    //     'SMALLINT',
+    //     'SMALLMONEY',
+    //     'SQL_VARIANT',
+    //     'TEXT',
+    //     'TIME',
+    //     'TINYINT',
+    //     'UNIQUEIDENTIFIER',
+    //     'VARBINARY',
+    //     'VARCHAR',
+    //     'XML',
+    // ];
 
     /**
      * https://dev.mysql.com/doc/refman/8.0/en/data-types.html
      */
     var MySQLTypes$1 = [
-        'BIGINT',
-        'BINARY',
-        'BIT',
-        'BLOB',
-        'BOOL',
-        'BOOLEAN',
-        'CHAR',
-        'DATE',
-        'DATETIME',
-        'DEC',
-        'DECIMAL',
-        'DOUBLE PRECISION',
-        'DOUBLE',
-        'ENUM',
-        'FLOAT',
-        'GEOMETRY',
-        'GEOMETRYCOLLECTION',
-        'INT',
-        'INTEGER',
-        'JSON',
-        'LINESTRING',
-        'LONGBLOB',
-        'LONGTEXT',
-        'MEDIUMBLOB',
-        'MEDIUMINT',
-        'MEDIUMTEXT',
-        'MULTILINESTRING',
-        'MULTIPOINT',
-        'MULTIPOLYGON',
-        'NUMERIC',
-        'POINT',
-        'POLYGON',
-        'SET',
-        'SMALLINT',
-        'TEXT',
-        'TIME',
-        'TIMESTAMP',
-        'TINYBLOB',
-        'TINYINT',
-        'TINYTEXT',
-        'VARBINARY',
-        'VARCHAR',
-        'YEAR',
+      'BIGINT(Long)',
+      'INT(Integer)',
+      'CHAR(Character)',
+      'DOUBLE(Double)',
+      'FLOAT(Float)',
+      'SMALLINT(Short)',
+      'TINYINT(Byte)',
+      'BOOLEAN(Boolean)',
+      'VARCHAR(String)',
+      'DATETIME(LocalDateTime)',
     ];
 
     /**
      * https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT012
      */
-    var OracleTypes$1 = [
-        'BFILE',
-        'BINARY_DOUBLE',
-        'BINARY_FLOAT',
-        'BLOB',
-        'CHAR',
-        'CLOB',
-        'DATE',
-        'DATETIME',
-        'LONG RAW',
-        'LONG',
-        'NCHAR',
-        'NCLOB',
-        'NUMBER',
-        'NVARCHAR2',
-        'RAW',
-        'TIMESTAMP WITH LOCAL TIME ZONE',
-        'TIMESTAMP WITH TIME ZONE',
-        'TIMESTAMP',
-        'UriType',
-        'VARCHAR',
-        'VARCHAR2',
-        'XMLType',
-    ];
+    // var OracleTypes$1 = [
+    //     'BFILE',
+    //     'BINARY_DOUBLE',
+    //     'BINARY_FLOAT',
+    //     'BLOB',
+    //     'CHAR',
+    //     'CLOB',
+    //     'DATE',
+    //     'DATETIME',
+    //     'LONG RAW',
+    //     'LONG',
+    //     'NCHAR',
+    //     'NCLOB',
+    //     'NUMBER',
+    //     'NVARCHAR2',
+    //     'RAW',
+    //     'TIMESTAMP WITH LOCAL TIME ZONE',
+    //     'TIMESTAMP WITH TIME ZONE',
+    //     'TIMESTAMP',
+    //     'UriType',
+    //     'VARCHAR',
+    //     'VARCHAR2',
+    //     'XMLType',
+    // ];
 
     /**
      * https://www.postgresql.org/docs/current/datatype.html
      */
-    var PostgreSQLTypes$1 = [
-        'BIGINT',
-        'BIGSERIAL',
-        'BIT VARYING',
-        'BIT',
-        'BOOL',
-        'BOOLEAN',
-        'BOX',
-        'BYTEA',
-        'CHAR',
-        'CHARACTER VARYING',
-        'CHARACTER',
-        'CIDR',
-        'CIRCLE',
-        'DATE',
-        'DECIMAL',
-        'DOUBLE PRECISION',
-        'FLOAT4',
-        'FLOAT8',
-        'INET',
-        'INT',
-        'INT2',
-        'INT4',
-        'INT8',
-        'INTEGER',
-        'INTERVAL',
-        'JSON',
-        'JSONB',
-        'LINE',
-        'LSEG',
-        'MACADDR',
-        'MACADDR8',
-        'MONEY',
-        'NUMERIC',
-        'PATH',
-        'PG_LSN',
-        'POINT',
-        'POLYGON',
-        'REAL',
-        'SERIAL',
-        'SERIAL2',
-        'SERIAL4',
-        'SERIAL8',
-        'SMALLINT',
-        'SMALLSERIAL',
-        'TEXT',
-        'TIME WITH',
-        'TIME',
-        'TIMESTAMP WITH',
-        'TIMESTAMP',
-        'TIMESTAMPTZ',
-        'TIMETZ',
-        'TSQUERY',
-        'TSVECTOR',
-        'TXID_SNAPSHOT',
-        'UUID',
-        'VARBIT',
-        'VARCHAR',
-        'XML',
-    ];
+    // var PostgreSQLTypes$1 = [
+    //     'BIGINT',
+    //     'BIGSERIAL',
+    //     'BIT VARYING',
+    //     'BIT',
+    //     'BOOL',
+    //     'BOOLEAN',
+    //     'BOX',
+    //     'BYTEA',
+    //     'CHAR',
+    //     'CHARACTER VARYING',
+    //     'CHARACTER',
+    //     'CIDR',
+    //     'CIRCLE',
+    //     'DATE',
+    //     'DECIMAL',
+    //     'DOUBLE PRECISION',
+    //     'FLOAT4',
+    //     'FLOAT8',
+    //     'INET',
+    //     'INT',
+    //     'INT2',
+    //     'INT4',
+    //     'INT8',
+    //     'INTEGER',
+    //     'INTERVAL',
+    //     'JSON',
+    //     'JSONB',
+    //     'LINE',
+    //     'LSEG',
+    //     'MACADDR',
+    //     'MACADDR8',
+    //     'MONEY',
+    //     'NUMERIC',
+    //     'PATH',
+    //     'PG_LSN',
+    //     'POINT',
+    //     'POLYGON',
+    //     'REAL',
+    //     'SERIAL',
+    //     'SERIAL2',
+    //     'SERIAL4',
+    //     'SERIAL8',
+    //     'SMALLINT',
+    //     'SMALLSERIAL',
+    //     'TEXT',
+    //     'TIME WITH',
+    //     'TIME',
+    //     'TIMESTAMP WITH',
+    //     'TIMESTAMP',
+    //     'TIMESTAMPTZ',
+    //     'TIMETZ',
+    //     'TSQUERY',
+    //     'TSVECTOR',
+    //     'TXID_SNAPSHOT',
+    //     'UUID',
+    //     'VARBIT',
+    //     'VARCHAR',
+    //     'XML',
+    // ];
 
     /**
      * https://www.sqlite.org/datatype3.html
      */
-    var SQLiteTypes$1 = [
-        'BLOB',
-        'INTEGER',
-        'NUMERIC',
-        'REAL',
-        'TEXT',
-    ];
+    // var SQLiteTypes$1 = [
+    //     'BLOB',
+    //     'INTEGER',
+    //     'NUMERIC',
+    //     'REAL',
+    //     'TEXT',
+    // ];
 
-    var MariaDBKeywords = [];
+    // var MariaDBKeywords = [];
 
-    var MSSQLKeywords = [];
+    // var MSSQLKeywords = [];
 
     var MySQLKeywords = [
         'ADD',
@@ -21973,11 +21935,11 @@
         'USE',
     ];
 
-    var OracleKeywords = [];
+    // var OracleKeywords = [];
 
-    var PostgreSQLKeywords = [];
+    // var PostgreSQLKeywords = [];
 
-    var SQLiteKeywords = ['AUTOINCREMENT'];
+    // var SQLiteKeywords = ['AUTOINCREMENT'];
 
     var tokenMatch = {
         whiteSpace: /(?:\s+|#.*|-- +.*|\/\*(?:[\s\S])*?\*\/)+/,
@@ -25952,268 +25914,248 @@
     /**
      * https://mariadb.com/kb/en/data-types/
      */
-    const MariaDBTypes = [
-        { name: 'BIGINT', primitiveType: 'long' },
-        { name: 'BINARY', primitiveType: 'string' },
-        { name: 'BIT', primitiveType: 'int' },
-        { name: 'BLOB', primitiveType: 'lob' },
-        { name: 'BOOL', primitiveType: 'boolean' },
-        { name: 'BOOLEAN', primitiveType: 'boolean' },
-        { name: 'CHAR', primitiveType: 'string' },
-        { name: 'DATE', primitiveType: 'date' },
-        { name: 'DATETIME', primitiveType: 'dateTime' },
-        { name: 'DEC', primitiveType: 'decimal' },
-        { name: 'DECIMAL', primitiveType: 'decimal' },
-        { name: 'DOUBLE PRECISION', primitiveType: 'double' },
-        { name: 'DOUBLE', primitiveType: 'double' },
-        { name: 'ENUM', primitiveType: 'string' },
-        { name: 'FIXED', primitiveType: 'decimal' },
-        { name: 'FLOAT', primitiveType: 'float' },
-        { name: 'GEOMETRY', primitiveType: 'string' },
-        { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
-        { name: 'INT', primitiveType: 'int' },
-        { name: 'INTEGER', primitiveType: 'int' },
-        { name: 'JSON', primitiveType: 'lob' },
-        { name: 'LINESTRING', primitiveType: 'string' },
-        { name: 'LONGBLOB', primitiveType: 'lob' },
-        { name: 'LONGTEXT', primitiveType: 'lob' },
-        { name: 'MEDIUMBLOB', primitiveType: 'lob' },
-        { name: 'MEDIUMINT', primitiveType: 'int' },
-        { name: 'MEDIUMTEXT', primitiveType: 'lob' },
-        { name: 'MULTILINESTRING', primitiveType: 'string' },
-        { name: 'MULTIPOINT', primitiveType: 'string' },
-        { name: 'MULTIPOLYGON', primitiveType: 'string' },
-        { name: 'NUMERIC', primitiveType: 'decimal' },
-        { name: 'POINT', primitiveType: 'string' },
-        { name: 'POLYGON', primitiveType: 'string' },
-        { name: 'REAL', primitiveType: 'double' },
-        { name: 'SET', primitiveType: 'string' },
-        { name: 'SMALLINT', primitiveType: 'int' },
-        { name: 'TEXT', primitiveType: 'lob' },
-        { name: 'TIME', primitiveType: 'time' },
-        { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-        { name: 'TINYBLOB', primitiveType: 'lob' },
-        { name: 'TINYINT', primitiveType: 'int' },
-        { name: 'TINYTEXT', primitiveType: 'lob' },
-        { name: 'VARBINARY', primitiveType: 'string' },
-        { name: 'VARCHAR', primitiveType: 'string' },
-        { name: 'YEAR', primitiveType: 'int' },
-    ];
+    // const MariaDBTypes = [
+    //     { name: 'BIGINT', primitiveType: 'long' },
+    //     { name: 'BINARY', primitiveType: 'string' },
+    //     { name: 'BIT', primitiveType: 'int' },
+    //     { name: 'BLOB', primitiveType: 'lob' },
+    //     { name: 'BOOL', primitiveType: 'boolean' },
+    //     { name: 'BOOLEAN', primitiveType: 'boolean' },
+    //     { name: 'CHAR', primitiveType: 'string' },
+    //     { name: 'DATE', primitiveType: 'date' },
+    //     { name: 'DATETIME', primitiveType: 'dateTime' },
+    //     { name: 'DEC', primitiveType: 'decimal' },
+    //     { name: 'DECIMAL', primitiveType: 'decimal' },
+    //     { name: 'DOUBLE PRECISION', primitiveType: 'double' },
+    //     { name: 'DOUBLE', primitiveType: 'double' },
+    //     { name: 'ENUM', primitiveType: 'string' },
+    //     { name: 'FIXED', primitiveType: 'decimal' },
+    //     { name: 'FLOAT', primitiveType: 'float' },
+    //     { name: 'GEOMETRY', primitiveType: 'string' },
+    //     { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
+    //     { name: 'INT', primitiveType: 'int' },
+    //     { name: 'INTEGER', primitiveType: 'int' },
+    //     { name: 'JSON', primitiveType: 'lob' },
+    //     { name: 'LINESTRING', primitiveType: 'string' },
+    //     { name: 'LONGBLOB', primitiveType: 'lob' },
+    //     { name: 'LONGTEXT', primitiveType: 'lob' },
+    //     { name: 'MEDIUMBLOB', primitiveType: 'lob' },
+    //     { name: 'MEDIUMINT', primitiveType: 'int' },
+    //     { name: 'MEDIUMTEXT', primitiveType: 'lob' },
+    //     { name: 'MULTILINESTRING', primitiveType: 'string' },
+    //     { name: 'MULTIPOINT', primitiveType: 'string' },
+    //     { name: 'MULTIPOLYGON', primitiveType: 'string' },
+    //     { name: 'NUMERIC', primitiveType: 'decimal' },
+    //     { name: 'POINT', primitiveType: 'string' },
+    //     { name: 'POLYGON', primitiveType: 'string' },
+    //     { name: 'REAL', primitiveType: 'double' },
+    //     { name: 'SET', primitiveType: 'string' },
+    //     { name: 'SMALLINT', primitiveType: 'int' },
+    //     { name: 'TEXT', primitiveType: 'lob' },
+    //     { name: 'TIME', primitiveType: 'time' },
+    //     { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+    //     { name: 'TINYBLOB', primitiveType: 'lob' },
+    //     { name: 'TINYINT', primitiveType: 'int' },
+    //     { name: 'TINYTEXT', primitiveType: 'lob' },
+    //     { name: 'VARBINARY', primitiveType: 'string' },
+    //     { name: 'VARCHAR', primitiveType: 'string' },
+    //     { name: 'YEAR', primitiveType: 'int' },
+    // ];
 
     /**
      * https://docs.microsoft.com/ko-kr/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
      */
-    const MSSQLTypes = [
-        { name: 'bigint', primitiveType: 'long' },
-        { name: 'binary', primitiveType: 'lob' },
-        { name: 'bit', primitiveType: 'int' },
-        { name: 'char', primitiveType: 'string' },
-        { name: 'date', primitiveType: 'date' },
-        { name: 'datetime', primitiveType: 'dateTime' },
-        { name: 'datetime2', primitiveType: 'dateTime' },
-        { name: 'datetimeoffset', primitiveType: 'dateTime' },
-        { name: 'decimal', primitiveType: 'decimal' },
-        { name: 'float', primitiveType: 'double' },
-        { name: 'geography', primitiveType: 'string' },
-        { name: 'geometry', primitiveType: 'string' },
-        { name: 'image', primitiveType: 'lob' },
-        { name: 'int', primitiveType: 'int' },
-        { name: 'money', primitiveType: 'double' },
-        { name: 'nchar', primitiveType: 'string' },
-        { name: 'ntext', primitiveType: 'lob' },
-        { name: 'numeric', primitiveType: 'float' },
-        { name: 'nvarchar', primitiveType: 'string' },
-        { name: 'real', primitiveType: 'float' },
-        { name: 'smalldatetime', primitiveType: 'dateTime' },
-        { name: 'smallint', primitiveType: 'int' },
-        { name: 'smallmoney', primitiveType: 'float' },
-        { name: 'sql_variant', primitiveType: 'string' },
-        { name: 'text', primitiveType: 'lob' },
-        { name: 'time', primitiveType: 'time' },
-        { name: 'tinyint', primitiveType: 'int' },
-        { name: 'uniqueidentifier', primitiveType: 'string' },
-        { name: 'varbinary', primitiveType: 'string' },
-        { name: 'varchar', primitiveType: 'string' },
-        { name: 'xml', primitiveType: 'lob' },
-    ];
+    // const MSSQLTypes = [
+    //     { name: 'bigint', primitiveType: 'long' },
+    //     { name: 'binary', primitiveType: 'lob' },
+    //     { name: 'bit', primitiveType: 'int' },
+    //     { name: 'char', primitiveType: 'string' },
+    //     { name: 'date', primitiveType: 'date' },
+    //     { name: 'datetime', primitiveType: 'dateTime' },
+    //     { name: 'datetime2', primitiveType: 'dateTime' },
+    //     { name: 'datetimeoffset', primitiveType: 'dateTime' },
+    //     { name: 'decimal', primitiveType: 'decimal' },
+    //     { name: 'float', primitiveType: 'double' },
+    //     { name: 'geography', primitiveType: 'string' },
+    //     { name: 'geometry', primitiveType: 'string' },
+    //     { name: 'image', primitiveType: 'lob' },
+    //     { name: 'int', primitiveType: 'int' },
+    //     { name: 'money', primitiveType: 'double' },
+    //     { name: 'nchar', primitiveType: 'string' },
+    //     { name: 'ntext', primitiveType: 'lob' },
+    //     { name: 'numeric', primitiveType: 'float' },
+    //     { name: 'nvarchar', primitiveType: 'string' },
+    //     { name: 'real', primitiveType: 'float' },
+    //     { name: 'smalldatetime', primitiveType: 'dateTime' },
+    //     { name: 'smallint', primitiveType: 'int' },
+    //     { name: 'smallmoney', primitiveType: 'float' },
+    //     { name: 'sql_variant', primitiveType: 'string' },
+    //     { name: 'text', primitiveType: 'lob' },
+    //     { name: 'time', primitiveType: 'time' },
+    //     { name: 'tinyint', primitiveType: 'int' },
+    //     { name: 'uniqueidentifier', primitiveType: 'string' },
+    //     { name: 'varbinary', primitiveType: 'string' },
+    //     { name: 'varchar', primitiveType: 'string' },
+    //     { name: 'xml', primitiveType: 'lob' },
+    // ];
 
     /**
      * https://dev.mysql.com/doc/refman/8.0/en/data-types.html
      */
     const MySQLTypes = [
-        { name: 'BIGINT', primitiveType: 'long' },
-        { name: 'BINARY', primitiveType: 'string' },
-        { name: 'BIT', primitiveType: 'int' },
-        { name: 'BLOB', primitiveType: 'lob' },
-        { name: 'BOOL', primitiveType: 'boolean' },
-        { name: 'BOOLEAN', primitiveType: 'boolean' },
-        { name: 'CHAR', primitiveType: 'string' },
-        { name: 'DATE', primitiveType: 'date' },
-        { name: 'DATETIME', primitiveType: 'dateTime' },
-        { name: 'DEC', primitiveType: 'decimal' },
-        { name: 'DECIMAL', primitiveType: 'decimal' },
-        { name: 'DOUBLE PRECISION', primitiveType: 'double' },
-        { name: 'DOUBLE', primitiveType: 'double' },
-        { name: 'ENUM', primitiveType: 'string' },
-        { name: 'FLOAT', primitiveType: 'float' },
-        { name: 'GEOMETRY', primitiveType: 'string' },
-        { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
-        { name: 'INT', primitiveType: 'int' },
-        { name: 'INTEGER', primitiveType: 'int' },
-        { name: 'JSON', primitiveType: 'lob' },
-        { name: 'LINESTRING', primitiveType: 'string' },
-        { name: 'LONGBLOB', primitiveType: 'lob' },
-        { name: 'LONGTEXT', primitiveType: 'lob' },
-        { name: 'MEDIUMBLOB', primitiveType: 'lob' },
-        { name: 'MEDIUMINT', primitiveType: 'int' },
-        { name: 'MEDIUMTEXT', primitiveType: 'lob' },
-        { name: 'MULTILINESTRING', primitiveType: 'string' },
-        { name: 'MULTIPOINT', primitiveType: 'string' },
-        { name: 'MULTIPOLYGON', primitiveType: 'string' },
-        { name: 'NUMERIC', primitiveType: 'decimal' },
-        { name: 'POINT', primitiveType: 'string' },
-        { name: 'POLYGON', primitiveType: 'string' },
-        { name: 'SET', primitiveType: 'string' },
-        { name: 'SMALLINT', primitiveType: 'int' },
-        { name: 'TEXT', primitiveType: 'lob' },
-        { name: 'TIME', primitiveType: 'time' },
-        { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-        { name: 'TINYBLOB', primitiveType: 'lob' },
-        { name: 'TINYINT', primitiveType: 'int' },
-        { name: 'TINYTEXT', primitiveType: 'lob' },
-        { name: 'VARBINARY', primitiveType: 'string' },
-        { name: 'VARCHAR', primitiveType: 'string' },
-        { name: 'YEAR', primitiveType: 'int' },
+      { name: 'BIGINT(Long)', primitiveType: 'long' },
+      // { name: 'BINARY', primitiveType: 'string' },
+      // { name: 'BIT', primitiveType: 'int' },
+      // { name: 'BLOB', primitiveType: 'lob' },
+      // { name: 'BOOL', primitiveType: 'boolean' },
+      { name: 'BOOLEAN(Boolean)', primitiveType: 'boolean' },
+      { name: 'CHAR(Character)', primitiveType: 'string' },
+      // { name: 'DATE', primitiveType: 'date' },
+      { name: 'DATETIME(LocalDateTime)', primitiveType: 'dateTime' },
+      // { name: 'DEC', primitiveType: 'decimal' },
+      // { name: 'DECIMAL', primitiveType: 'decimal' },
+      // { name: 'DOUBLE PRECISION', primitiveType: 'double' },
+      { name: 'DOUBLE(Double)', primitiveType: 'double' },
+      // { name: 'ENUM', primitiveType: 'string' },
+      { name: 'FLOAT(Float)', primitiveType: 'float' },
+      // { name: 'GEOMETRY', primitiveType: 'string' },
+      // { name: 'GEOMETRYCOLLECTION', primitiveType: 'string' },
+      { name: 'INT(Integer)', primitiveType: 'int' },
+      // { name: 'INTEGER', primitiveType: 'int' },
+      // { name: 'JSON', primitiveType: 'lob' },
+      // { name: 'LINESTRING', primitiveType: 'string' },
+      // { name: 'LONGBLOB', primitiveType: 'lob' },
+      // { name: 'LONGTEXT', primitiveType: 'lob' },
+      // { name: 'MEDIUMBLOB', primitiveType: 'lob' },
+      // { name: 'MEDIUMINT', primitiveType: 'int' },
+      // { name: 'MEDIUMTEXT', primitiveType: 'lob' },
+      // { name: 'MULTILINESTRING', primitiveType: 'string' },
+      // { name: 'MULTIPOINT', primitiveType: 'string' },
+      // { name: 'MULTIPOLYGON', primitiveType: 'string' },
+      // { name: 'NUMERIC', primitiveType: 'decimal' },
+      // { name: 'POINT', primitiveType: 'string' },
+      // { name: 'POLYGON', primitiveType: 'string' },
+      // { name: 'SET', primitiveType: 'string' },
+      { name: 'SMALLINT(Short)', primitiveType: 'int' },
+      // { name: 'TEXT', primitiveType: 'lob' },
+      // { name: 'TIME', primitiveType: 'time' },
+      // { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+      // { name: 'TINYBLOB', primitiveType: 'lob' },
+      { name: 'TINYINT(Byte)', primitiveType: 'int' },
+      // { name: 'TINYTEXT', primitiveType: 'lob' },
+      // { name: 'VARBINARY', primitiveType: 'string' },
+      { name: 'VARCHAR(String)', primitiveType: 'string' },
+      // { name: 'YEAR', primitiveType: 'int' },
     ];
 
     /**
      * https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT012
      */
-    const OracleTypes = [
-        { name: 'BFILE', primitiveType: 'lob' },
-        { name: 'BINARY_DOUBLE', primitiveType: 'double' },
-        { name: 'BINARY_FLOAT', primitiveType: 'float' },
-        { name: 'BLOB', primitiveType: 'lob' },
-        { name: 'CHAR', primitiveType: 'string' },
-        { name: 'CLOB', primitiveType: 'lob' },
-        { name: 'DATE', primitiveType: 'date' },
-        { name: 'DATETIME', primitiveType: 'dateTime' },
-        { name: 'LONG RAW', primitiveType: 'lob' },
-        { name: 'LONG', primitiveType: 'lob' },
-        { name: 'NCHAR', primitiveType: 'string' },
-        { name: 'NCLOB', primitiveType: 'lob' },
-        { name: 'NUMBER', primitiveType: 'long' },
-        { name: 'NVARCHAR2', primitiveType: 'string' },
-        { name: 'RAW', primitiveType: 'lob' },
-        { name: 'TIMESTAMP WITH LOCAL TIME ZONE', primitiveType: 'dateTime' },
-        { name: 'TIMESTAMP WITH TIME ZONE', primitiveType: 'dateTime' },
-        { name: 'TIMESTAMP', primitiveType: 'dateTime' },
-        { name: 'UriType', primitiveType: 'string' },
-        { name: 'VARCHAR', primitiveType: 'string' },
-        { name: 'VARCHAR2', primitiveType: 'string' },
-        { name: 'XMLType', primitiveType: 'string' },
-    ];
+    // const OracleTypes = [
+    //     { name: 'BFILE', primitiveType: 'lob' },
+    //     { name: 'BINARY_DOUBLE', primitiveType: 'double' },
+    //     { name: 'BINARY_FLOAT', primitiveType: 'float' },
+    //     { name: 'BLOB', primitiveType: 'lob' },
+    //     { name: 'CHAR', primitiveType: 'string' },
+    //     { name: 'CLOB', primitiveType: 'lob' },
+    //     { name: 'DATE', primitiveType: 'date' },
+    //     { name: 'DATETIME', primitiveType: 'dateTime' },
+    //     { name: 'LONG RAW', primitiveType: 'lob' },
+    //     { name: 'LONG', primitiveType: 'lob' },
+    //     { name: 'NCHAR', primitiveType: 'string' },
+    //     { name: 'NCLOB', primitiveType: 'lob' },
+    //     { name: 'NUMBER', primitiveType: 'long' },
+    //     { name: 'NVARCHAR2', primitiveType: 'string' },
+    //     { name: 'RAW', primitiveType: 'lob' },
+    //     { name: 'TIMESTAMP WITH LOCAL TIME ZONE', primitiveType: 'dateTime' },
+    //     { name: 'TIMESTAMP WITH TIME ZONE', primitiveType: 'dateTime' },
+    //     { name: 'TIMESTAMP', primitiveType: 'dateTime' },
+    //     { name: 'UriType', primitiveType: 'string' },
+    //     { name: 'VARCHAR', primitiveType: 'string' },
+    //     { name: 'VARCHAR2', primitiveType: 'string' },
+    //     { name: 'XMLType', primitiveType: 'string' },
+    // ];
 
     /**
      * https://www.postgresql.org/docs/current/datatype.html
      */
-    const PostgreSQLTypes = [
-        { name: 'bigint', primitiveType: 'long' },
-        { name: 'bigserial', primitiveType: 'long' },
-        { name: 'bit varying', primitiveType: 'int' },
-        { name: 'bit', primitiveType: 'int' },
-        { name: 'bool', primitiveType: 'boolean' },
-        { name: 'boolean', primitiveType: 'boolean' },
-        { name: 'box', primitiveType: 'string' },
-        { name: 'bytea', primitiveType: 'string' },
-        { name: 'char', primitiveType: 'string' },
-        { name: 'character varying', primitiveType: 'string' },
-        { name: 'character', primitiveType: 'string' },
-        { name: 'cidr', primitiveType: 'string' },
-        { name: 'circle', primitiveType: 'string' },
-        { name: 'date', primitiveType: 'date' },
-        { name: 'decimal', primitiveType: 'decimal' },
-        { name: 'double precision', primitiveType: 'double' },
-        { name: 'float4', primitiveType: 'float' },
-        { name: 'float8', primitiveType: 'double' },
-        { name: 'inet', primitiveType: 'string' },
-        { name: 'int', primitiveType: 'int' },
-        { name: 'int2', primitiveType: 'int' },
-        { name: 'int4', primitiveType: 'int' },
-        { name: 'int8', primitiveType: 'long' },
-        { name: 'integer', primitiveType: 'int' },
-        { name: 'interval', primitiveType: 'time' },
-        { name: 'json', primitiveType: 'lob' },
-        { name: 'jsonb', primitiveType: 'lob' },
-        { name: 'line', primitiveType: 'string' },
-        { name: 'lseg', primitiveType: 'string' },
-        { name: 'macaddr', primitiveType: 'string' },
-        { name: 'macaddr8', primitiveType: 'string' },
-        { name: 'money', primitiveType: 'double' },
-        { name: 'numeric', primitiveType: 'decimal' },
-        { name: 'path', primitiveType: 'string' },
-        { name: 'pg_lsn', primitiveType: 'int' },
-        { name: 'point', primitiveType: 'string' },
-        { name: 'polygon', primitiveType: 'string' },
-        { name: 'real', primitiveType: 'float' },
-        { name: 'serial', primitiveType: 'int' },
-        { name: 'serial2', primitiveType: 'int' },
-        { name: 'serial4', primitiveType: 'int' },
-        { name: 'serial8', primitiveType: 'long' },
-        { name: 'smallint', primitiveType: 'int' },
-        { name: 'smallserial', primitiveType: 'int' },
-        { name: 'text', primitiveType: 'string' },
-        { name: 'time with time zone', primitiveType: 'time' },
-        { name: 'time', primitiveType: 'time' },
-        { name: 'timestamp with time zone', primitiveType: 'dateTime' },
-        { name: 'timestamp', primitiveType: 'dateTime' },
-        { name: 'timestamptz', primitiveType: 'dateTime' },
-        { name: 'timetz', primitiveType: 'time' },
-        { name: 'tsquery', primitiveType: 'string' },
-        { name: 'tsvector', primitiveType: 'string' },
-        { name: 'txid_snapshot', primitiveType: 'string' },
-        { name: 'uuid', primitiveType: 'string' },
-        { name: 'varbit', primitiveType: 'int' },
-        { name: 'varchar', primitiveType: 'string' },
-        { name: 'xml', primitiveType: 'lob' },
-    ];
+    // const PostgreSQLTypes = [
+    //     { name: 'bigint', primitiveType: 'long' },
+    //     { name: 'bigserial', primitiveType: 'long' },
+    //     { name: 'bit varying', primitiveType: 'int' },
+    //     { name: 'bit', primitiveType: 'int' },
+    //     { name: 'bool', primitiveType: 'boolean' },
+    //     { name: 'boolean', primitiveType: 'boolean' },
+    //     { name: 'box', primitiveType: 'string' },
+    //     { name: 'bytea', primitiveType: 'string' },
+    //     { name: 'char', primitiveType: 'string' },
+    //     { name: 'character varying', primitiveType: 'string' },
+    //     { name: 'character', primitiveType: 'string' },
+    //     { name: 'cidr', primitiveType: 'string' },
+    //     { name: 'circle', primitiveType: 'string' },
+    //     { name: 'date', primitiveType: 'date' },
+    //     { name: 'decimal', primitiveType: 'decimal' },
+    //     { name: 'double precision', primitiveType: 'double' },
+    //     { name: 'float4', primitiveType: 'float' },
+    //     { name: 'float8', primitiveType: 'double' },
+    //     { name: 'inet', primitiveType: 'string' },
+    //     { name: 'int', primitiveType: 'int' },
+    //     { name: 'int2', primitiveType: 'int' },
+    //     { name: 'int4', primitiveType: 'int' },
+    //     { name: 'int8', primitiveType: 'long' },
+    //     { name: 'integer', primitiveType: 'int' },
+    //     { name: 'interval', primitiveType: 'time' },
+    //     { name: 'json', primitiveType: 'lob' },
+    //     { name: 'jsonb', primitiveType: 'lob' },
+    //     { name: 'line', primitiveType: 'string' },
+    //     { name: 'lseg', primitiveType: 'string' },
+    //     { name: 'macaddr', primitiveType: 'string' },
+    //     { name: 'macaddr8', primitiveType: 'string' },
+    //     { name: 'money', primitiveType: 'double' },
+    //     { name: 'numeric', primitiveType: 'decimal' },
+    //     { name: 'path', primitiveType: 'string' },
+    //     { name: 'pg_lsn', primitiveType: 'int' },
+    //     { name: 'point', primitiveType: 'string' },
+    //     { name: 'polygon', primitiveType: 'string' },
+    //     { name: 'real', primitiveType: 'float' },
+    //     { name: 'serial', primitiveType: 'int' },
+    //     { name: 'serial2', primitiveType: 'int' },
+    //     { name: 'serial4', primitiveType: 'int' },
+    //     { name: 'serial8', primitiveType: 'long' },
+    //     { name: 'smallint', primitiveType: 'int' },
+    //     { name: 'smallserial', primitiveType: 'int' },
+    //     { name: 'text', primitiveType: 'string' },
+    //     { name: 'time with time zone', primitiveType: 'time' },
+    //     { name: 'time', primitiveType: 'time' },
+    //     { name: 'timestamp with time zone', primitiveType: 'dateTime' },
+    //     { name: 'timestamp', primitiveType: 'dateTime' },
+    //     { name: 'timestamptz', primitiveType: 'dateTime' },
+    //     { name: 'timetz', primitiveType: 'time' },
+    //     { name: 'tsquery', primitiveType: 'string' },
+    //     { name: 'tsvector', primitiveType: 'string' },
+    //     { name: 'txid_snapshot', primitiveType: 'string' },
+    //     { name: 'uuid', primitiveType: 'string' },
+    //     { name: 'varbit', primitiveType: 'int' },
+    //     { name: 'varchar', primitiveType: 'string' },
+    //     { name: 'xml', primitiveType: 'lob' },
+    // ];
 
     /**
      * https://www.sqlite.org/datatype3.html
      */
-    const SQLiteTypes = [
-        { name: 'BLOB', primitiveType: 'lob' },
-        { name: 'INTEGER', primitiveType: 'int' },
-        { name: 'NUMERIC', primitiveType: 'decimal' },
-        { name: 'REAL', primitiveType: 'double' },
-        { name: 'TEXT', primitiveType: 'string' },
-    ];
+    // const SQLiteTypes = [
+    //     { name: 'BLOB', primitiveType: 'lob' },
+    //     { name: 'INTEGER', primitiveType: 'int' },
+    //     { name: 'NUMERIC', primitiveType: 'decimal' },
+    //     { name: 'REAL', primitiveType: 'double' },
+    //     { name: 'TEXT', primitiveType: 'string' },
+    // ];
 
     const databaseHints = [
-        {
-            database: 'MariaDB',
-            dataTypeHints: MariaDBTypes,
-        },
-        {
-            database: 'MSSQL',
-            dataTypeHints: MSSQLTypes,
-        },
         {
             database: 'MySQL',
             dataTypeHints: MySQLTypes,
         },
-        {
-            database: 'Oracle',
-            dataTypeHints: OracleTypes,
-        },
-        {
-            database: 'PostgreSQL',
-            dataTypeHints: PostgreSQLTypes,
-        },
-        {
-            database: 'SQLite',
-            dataTypeHints: SQLiteTypes,
-        },
     ];
 
     function getPrimitiveType(dataType, database) {
@@ -52858,15 +52800,6 @@
                 name: 'Export',
                 children: createExportMenus(context, canvas),
             },
-            {
-                icon: {
-                    prefix: 'mdi',
-                    name: 'atom',
-                    size: 18,
-                },
-                name: 'Automatic Table Placement',
-                execute: () => runAutomaticTablePlacement(context),
-            },
         ].map(menu => (Object.assign(Object.assign({}, menu), { options: Object.assign({}, defaultOptions$a) })));
     }
 
