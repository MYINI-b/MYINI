@import 'variables.scss';
$breakpoints: (
        'small': (max-width: 950px),
        'medium': (max-width: 1230px),
        'large': (max-width: 1500px),
) !default;

@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

.build-container {
  width: 100%;
  height: 130vh;
  padding: rem(88) rem(30) rem(30) rem(30);
  @include FLEX-COLUMN;
  .build-title {
    margin-top: rem(40);
    font-weight: bold;
    font-size: rem(36);
  }
  .build-project-title {
    margin-right: rem(20);
    color: $primary;
    font-size: rem(20);
    font-family: $eng-title;
    @include FLEX-ALIGN-CENTER;
  }
  .build-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    
  }
  .build-main {
    width: 100%;
    height: 100%;
    padding-top: rem(30);
    display: flex;
    justify-content: center;
    .init-container {
      @include FLEX-COLUMN;
      @include BORDER-PAPER;
      height: 80%;
      width: 48%;
      overflow-y: scroll;
      @include respond-to('small') {
        height: 70%;
      }
      .tab-item {
        padding-top: rem(24);
        .item-row {
          display: flex;
          flex-direction: column;
          justify-content:first baseline;
        }
        .button-item {
          display: flex;
          flex-direction: row;
          font-family: $eng-content;
          font-size: rem(20);
          width: 100%;
          @include respond-to('large') {
            font-size: rem(16);
          }
          @include respond-to('medium') {
            font-size: rem(12);
          }
          @include respond-to('small') {
            font-size: rem(10);
          }
          .item-element {
            padding-bottom: rem(35);
            width: 40%;
          }
          .single-select {
            @include FLEX-COLUMN;
            .container {
              .radio-set {
                display: flex;
                border: rem(0);
                align-items: center;
                height: rem(50);
                .radio-title {
                  font-family: $eng-content;
                  width: 15%;
                  margin-right: rem(10);
                }
                .radio-content {
                  font-family: $eng-content;
                  width: 13%;
                  padding-left: rem(5);
                  .radio-input {
                    position: absolute;
                    visibility: hidden;
                    margin: rem(2);
                    &:checked + label {
                      background: $primary;
                      border-right: 1px solid $primary;
                      color: $white;
                    }
                    &:hover + label {
                      box-shadow: 0 0 12px rgba($primary, 0.3);
                      transition: box-shadow 100ms ease-in;
                    }
                  }
                  .radio-field {
                    @include FLEX-CENTER;
                    text-align: center;
                    border-radius: rem(10);
                    font-size: rem(5);
                    margin: rem(-2);
                    padding: rem(15) rem(20);
                    background-image: none;
                    background-color: $white;
                    border: rem(1) solid $secondary;
                    width: 98%;
                    height: rem(30);
                  }
                }
              }
            }
          }
        }
        .metadata {
          padding-top: rem(30);
          padding-bottom: rem(20);
          font-size: rem(20);
        }
        .project-metadata {
          padding-left: rem(10);
          display: flex;
          height: rem(40);
          .metadata-name {
            width: rem(150);
          }
          .submit-box {
            padding-left: rem(25);
            width: 75%;
            .text-box {
              @include FLEX-CENTER;
              width: 100%;
              height: rem(30);
              margin-bottom: rem(35);
            }
          }
        }
        .dependency {
          font-size: rem(20);
          padding-top: rem(23);
        }
      }
    }
    
    .title-item {
      font-family: $eng-title;
      font-size: rem(25);
      display: flex;
      justify-content: center;
    }
    
    .confirm-code {
      @include FLEX-COLUMN;
      @include BORDER-PAPER;
      height: 80%;
      width: 48%;
      margin-left: rem(25);
      @include respond-to('small') {
        height: 70%;
      }
      .build-project-button {
        margin-top: rem(30);
      }
    }
    
    .confirmcode-title {
      font-family: $eng-title;
      font-size: rem(25);
      display: flex;
      justify-content: center;
      padding-bottom: rem(33);
    }
  }
} 

.confirm-total {
  height: rem(250);
  @include respond-to('small') {
    height: rem(240);
  }
  overflow-y: scroll;
  margin-bottom: rem(10);
  .confirm-title {
    font-size: rem(20);
    font-family: $eng-content;
    padding-top: rem(15 );
  }
  .confirm-content {
    font-size: rem(15);
    font-family: $eng-content;
    padding-top: rem(5);
  }
}